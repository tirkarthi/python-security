{
    "Modified": "2011-03-01T02:01:54.440000",
    "Published": "2010-05-27T15:30:01.733000",
    "access": {
        "authentication": "NONE",
        "complexity": "LOW",
        "vector": "NETWORK"
    },
    "capec": [
        {
            "id": "10",
            "name": "Buffer Overflow via Environment Variables",
            "prerequisites": "The application uses environment variables.\nAn environment variable exposed to the user is vulnerable to a buffer overflow.\nThe vulnerable environment variable uses untrusted data.\nTainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer.",
            "related_weakness": [
                "120",
                "302",
                "118",
                "119",
                "74",
                "99",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Do not expose environment variable to the user.\nDo not use untrusted data in your environment variables.\nUse a language or compiler that performs automatic bounds checking\nThere are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow.",
            "summary": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables."
        },
        {
            "id": "100",
            "name": "Overflow Buffers",
            "prerequisites": "Targeted software performs buffer operations.\nTargeted software inadequately performs bounds-checking on buffer operations.\nAttacker has the capability to influence the input to buffer operations.",
            "related_weakness": [
                "120",
                "119",
                "131",
                "129",
                "805",
                "19",
                "680"
            ],
            "solutions": "Use a language or compiler that performs automatic bounds checking.\nUse secure functions not vulnerable to buffer overflow.\nIf you have to use dangerous functions, make sure that you do boundary checking.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.\nUtilize static source code analysis tools to identify potential buffer overflow weaknesses in the software.",
            "summary": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an attacker. As a consequence, an attacker is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the attackers' choice."
        },
        {
            "id": "14",
            "name": "Client-side Injection-induced Buffer Overflow",
            "prerequisites": "The targeted client software communicates with an external server.\nThe targeted client software has a buffer overflow vulnerability.",
            "related_weakness": [
                "120",
                "353",
                "118",
                "119",
                "74",
                "20",
                "680",
                "697",
                "713"
            ],
            "solutions": "The client software should not install untrusted code from a non-authenticated server.\nThe client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.\nPerform input validation for length of buffer inputs.\nUse a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nEnsure all buffer uses are consistently bounds-checked.\nUse OS-level preventative functionality. Not a complete solution.",
            "summary": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service."
        },
        {
            "id": "24",
            "name": "Filter Failure through Buffer Overflow",
            "prerequisites": "Ability to control the length of data passed to an active filter.",
            "related_weakness": [
                "120",
                "119",
                "118",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.\nPre-design: Use a language or compiler that performs automatic bounds checking.\nPre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nOperational: Use OS-level preventative functionality. Not a complete solution.\nDesign: Use an abstraction library to abstract away risky APIs. Not a complete solution.",
            "summary": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered)."
        },
        {
            "id": "42",
            "name": "MIME Conversion",
            "prerequisites": "The target system uses a mail server.\nMail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system.",
            "related_weakness": [
                "120",
                "119",
                "74",
                "20"
            ],
            "solutions": "Stay up to date with third party vendor patches\nFrom \"Exploiting Software\", please see reference below.\nUse the sendmail restricted shell program (smrsh)\nUse mail.local",
            "summary": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back."
        },
        {
            "id": "44",
            "name": "Overflow Binary Resource File",
            "prerequisites": "Target software processes binary resource files.\nTarget software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file.",
            "related_weakness": [
                "120",
                "119",
                "697",
                "713"
            ],
            "solutions": "Perform appropriate bounds checking on all buffers.\nDesign: Enforce principle of least privilege\nDesign: Static code analysis\nImplementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes\nImplementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host.",
            "summary": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow."
        },
        {
            "id": "45",
            "name": "Buffer Overflow via Symbolic Links",
            "prerequisites": "The attacker can create symbolic link on the target host.\nThe target host does not perform correct boundary checking while consuming data from a resources.",
            "related_weakness": [
                "120",
                "285",
                "302",
                "118",
                "119",
                "74",
                "20",
                "680",
                "697"
            ],
            "solutions": "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.\nBecause Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories.\nPay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.\nAlways check the size of the input data before copying to a buffer.\nUse a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.",
            "summary": "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."
        },
        {
            "id": "46",
            "name": "Overflow Variables and Tags",
            "prerequisites": "The target program consumes user-controllable data in the form of tags or variables.\nThe target program does not perform sufficient boundary checking.",
            "related_weakness": [
                "120",
                "118",
                "119",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Use a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.\nDo not trust input data from user. Validate all user input.",
            "summary": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow."
        },
        {
            "id": "47",
            "name": "Buffer Overflow via Parameter Expansion",
            "prerequisites": "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.\nThe expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is).",
            "related_weakness": [
                "120",
                "119",
                "118",
                "130",
                "131",
                "74",
                "20",
                "680",
                "697"
            ],
            "solutions": "Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system",
            "summary": "In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow."
        },
        {
            "id": "8",
            "name": "Buffer Overflow in an API Call",
            "prerequisites": "The target host exposes an API to the user.\nOne or more API functions exposed by the target host has a buffer overflow vulnerability.",
            "related_weakness": [
                "120",
                "119",
                "118",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Use a language or compiler that performs automatic bounds checking.\nUse secure functions not vulnerable to buffer overflow.\nIf you have to use dangerous functions, make sure that you do boundary checking.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.",
            "summary": "This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process."
        },
        {
            "id": "9",
            "name": "Buffer Overflow in Local Command-Line Utilities",
            "prerequisites": "The target host exposes a command-line utility to the user.\nThe command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited.",
            "related_weakness": [
                "120",
                "118",
                "119",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.\nUse a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nOperational: Use OS-level preventative functionality. Not a complete solution.\nApply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.\nDo not unnecessarily expose services.",
            "summary": "This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root."
        }
    ],
    "cvss": 7.5,
    "cvss-time": "2010-05-28T10:43:00",
    "cwe": "CWE-119",
    "id": "CVE-2010-1450",
    "impact": {
        "availability": "PARTIAL",
        "confidentiality": "PARTIAL",
        "integrity": "PARTIAL"
    },
    "nessus": [
        {
            "NASL family": "MacOS X Local Security Checks",
            "NASL id": "MACOSX_10_6_5.NASL",
            "description": "The remote host is running a version of Mac OS X 10.6.x that is prior to 10.6.5.\n\nMac OS X 10.6.5 contains security fixes for the following products :\n\n  - AFP Server\n  - Apache mod_perl\n  - Apache\n  - AppKit\n  - ATS\n  - CFNetwork\n  - CoreGraphics\n  - CoreText\n  - CUPS\n  - Directory Services\n  - diskdev_cmds\n  - Disk Images\n  - Flash Player plug-in\n  - gzip\n  - Image Capture\n  - ImageIO\n  - Image RAW\n  - Kernel\n  - MySQL\n  - neon\n  - Networking\n  - OpenLDAP\n  - OpenSSL\n  - Password Server\n  - PHP\n  - Printing\n  - python\n  - QuickLook\n  - QuickTime\n  - Safari RSS\n  - Time Machine\n  - Wiki Server\n  - X11\n  - xar",
            "last seen": "2019-02-21",
            "modified": "2018-07-14",
            "plugin id": "50548",
            "published": "2010-11-10",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=50548",
            "title": "Mac OS X 10.6.x < 10.6.5 Multiple Vulnerabilities"
        },
        {
            "NASL family": "Red Hat Local Security Checks",
            "NASL id": "REDHAT-RHSA-2011-0260.NASL",
            "description": "Updated python packages that fix multiple security issues and three bugs are now available for Red Hat Enterprise Linux 4.\n\nThe Red Hat Security Response Team has rated this update as having low security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language.\n\nMultiple flaws were found in the Python rgbimg module. If an application written in Python was using the rgbimg module and loaded a specially crafted SGI image file, it could cause the application to crash or, possibly, execute arbitrary code with the privileges of the user running the application. (CVE-2009-4134, CVE-2010-1449, CVE-2010-1450)\n\nThis update also fixes the following bugs :\n\n* Python 2.3.4's time.strptime() function did not correctly handle the '%W' week number format string. This update backports the _strptime implementation from Python 2.3.6, fixing this issue. (BZ#436001)\n\n* Python 2.3.4's socket.htons() function returned partially-uninitialized data on IBM System z, generally leading to incorrect results. (BZ#513341)\n\n* Python 2.3.4's pwd.getpwuid() and grp.getgrgid() functions did not support the full range of user and group IDs on 64-bit architectures, leading to 'OverflowError' exceptions for large input values. This update adds support for the full range of user and group IDs on 64-bit architectures. (BZ#497540)\n\nUsers of Python should upgrade to these updated packages, which contain backported patches to correct these issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-26",
            "plugin id": "52007",
            "published": "2011-02-17",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=52007",
            "title": "RHEL 4 : python (RHSA-2011:0260)"
        },
        {
            "NASL family": "Scientific Linux Local Security Checks",
            "NASL id": "SL_20110216_PYTHON_ON_SL4_X.NASL",
            "description": "Multiple flaws were found in the Python rgbimg module. If an application written in Python was using the rgbimg module and loaded a specially crafted SGI image file, it could cause the application to crash or, possibly, execute arbitrary code with the privileges of the user running the application. (CVE-2009-4134, CVE-2010-1449, CVE-2010-1450)\n\nThis update also fixes the following bugs :\n\n  - Python 2.3.4's time.strptime() function did not     correctly handle the '%W' week number format string.\n    This update backports the _strptime implementation from     Python 2.3.6, fixing this issue. (BZ#436001)\n\n  - Python 2.3.4's socket.htons() function returned     partially-uninitialized data on IBM System z, generally     leading to incorrect results. (BZ#513341)\n\n  - Python 2.3.4's pwd.getpwuid() and grp.getgrgid()     functions did not support the full range of user and     group IDs on 64-bit architectures, leading to     'OverflowError' exceptions for large input values. This     update adds support for the full range of user and group     IDs on 64-bit architectures. (BZ#497540)",
            "last seen": "2019-02-21",
            "modified": "2018-12-31",
            "plugin id": "60960",
            "published": "2012-08-01",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=60960",
            "title": "Scientific Linux Security Update : python on SL4.x i386/x86_64"
        },
        {
            "NASL family": "MacOS X Local Security Checks",
            "NASL id": "MACOSX_SECUPD2010-007.NASL",
            "description": "The remote host is running a version of Mac OS X 10.5 that does not have Security Update 2010-007 applied. \n\nThis security update contains fixes for the following products :\n\n  - AFP Server\n  - Apache mod_perl\n  - ATS\n  - CFNetwork\n  - CoreGraphics\n  - CoreText\n  - CUPS\n  - Directory Services\n  - diskdev_cmds\n  - Disk Images\n  - Flash Player plug-in\n  - gzip\n  - ImageIO\n  - Image RAW\n  - MySQL\n  - Password Server\n  - PHP\n  - Printing\n  - python\n  - QuickLook\n  - Safari RSS\n  - Wiki Server\n  - X11",
            "last seen": "2019-02-21",
            "modified": "2018-07-14",
            "plugin id": "50549",
            "published": "2010-11-10",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=50549",
            "title": "Mac OS X Multiple Vulnerabilities (Security Update 2010-007)"
        },
        {
            "NASL family": "Oracle Linux Local Security Checks",
            "NASL id": "ORACLELINUX_ELSA-2011-0260.NASL",
            "description": "From Red Hat Security Advisory 2011:0260 :\n\nUpdated python packages that fix multiple security issues and three bugs are now available for Red Hat Enterprise Linux 4.\n\nThe Red Hat Security Response Team has rated this update as having low security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language.\n\nMultiple flaws were found in the Python rgbimg module. If an application written in Python was using the rgbimg module and loaded a specially crafted SGI image file, it could cause the application to crash or, possibly, execute arbitrary code with the privileges of the user running the application. (CVE-2009-4134, CVE-2010-1449, CVE-2010-1450)\n\nThis update also fixes the following bugs :\n\n* Python 2.3.4's time.strptime() function did not correctly handle the '%W' week number format string. This update backports the _strptime implementation from Python 2.3.6, fixing this issue. (BZ#436001)\n\n* Python 2.3.4's socket.htons() function returned partially-uninitialized data on IBM System z, generally leading to incorrect results. (BZ#513341)\n\n* Python 2.3.4's pwd.getpwuid() and grp.getgrgid() functions did not support the full range of user and group IDs on 64-bit architectures, leading to 'OverflowError' exceptions for large input values. This update adds support for the full range of user and group IDs on 64-bit architectures. (BZ#497540)\n\nUsers of Python should upgrade to these updated packages, which contain backported patches to correct these issues.",
            "last seen": "2019-02-21",
            "modified": "2015-12-01",
            "plugin id": "68201",
            "published": "2013-07-12",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=68201",
            "title": "Oracle Linux 4 : python (ELSA-2011-0260)"
        },
        {
            "NASL family": "Mandriva Local Security Checks",
            "NASL id": "MANDRIVA_MDVSA-2010-215.NASL",
            "description": "Multiple vulnerabilities was discovered and corrected in python :\n\nBuffer underflow in the rgbimg module in Python 2.5 allows remote attackers to cause a denial of service (application crash) via a large ZSIZE value in a black-and-white (aka B/W) RGB image that triggers an invalid pointer dereference (CVE-2009-4134).\n\nInteger overflow in rgbimgmodule.c in the rgbimg module in Python 2.5 allows remote attackers to have an unspecified impact via a large image that triggers a buffer overflow. NOTE: this vulnerability exists because of an incomplete fix for CVE-2008-3143.12 (CVE-2010-1449).\n\nMultiple buffer overflows in the RLE decoder in the rgbimg module in Python 2.5 allow remote attackers to have an unspecified impact via an image file containing crafted data that triggers improper processing within the (1) longimagedata or (2) expandrow function (CVE-2010-1450).\n\nThe asyncore module in Python before 3.2 does not properly handle unsuccessful calls to the accept function, and does not have accompanying documentation describing how daemon applications should handle unsuccessful calls to the accept function, which makes it easier for remote attackers to conduct denial of service attacks that terminate these applications via network connections (CVE-2010-3492).\n\nMultiple race conditions in smtpd.py in the smtpd module in Python 2.6, 2.7, 3.1, and 3.2 alpha allow remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, or the getpeername function having an ENOTCONN error, a related issue to CVE-2010-3492 (CVE-2010-3493).\n\nPackages for 2009.0 are provided as of the Extended Maintenance Program. Please visit this link to learn more:\nhttp://store.mandriva.com/product_info.php?cPath=149&amp;products_id=4 90\n\nThe updated packages have been patched to correct these issues.",
            "last seen": "2019-02-21",
            "modified": "2018-07-19",
            "plugin id": "50423",
            "published": "2010-11-01",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=50423",
            "title": "Mandriva Linux Security Advisory : python (MDVSA-2010:215)"
        },
        {
            "NASL family": "Scientific Linux Local Security Checks",
            "NASL id": "SL_20110113_PYTHON_ON_SL5_X.NASL",
            "description": "It was found that many applications embedding the Python interpreter did not specify a valid full path to the script or application when calling the PySys_SetArgv API function, which could result in the addition of the current working directory to the module search path (sys.path). A local attacker able to trick a victim into running such an application in an attacker-controlled directory could use this flaw to execute code with the victim's privileges. This update adds the PySys_SetArgvEx API. Developers can modify their applications to use this new API, which sets sys.argv without modifying sys.path.\n(CVE-2008-5983)\n\nMultiple flaws were found in the Python rgbimg module. If an application written in Python was using the rgbimg module and loaded a specially crafted SGI image file, it could cause the application to crash or, possibly, execute arbitrary code with the privileges of the user running the application. (CVE-2009-4134, CVE-2010-1449, CVE-2010-1450)\n\nMultiple flaws were found in the Python audioop module. Supplying certain inputs could cause the audioop module to crash or, possibly, execute arbitrary code. (CVE-2010-1634, CVE-2010-2089)\n\nThis update also fixes the following bugs :\n\n  - When starting a child process from the subprocess module     in Python 2.4, the parent process could leak file     descriptors if an error occurred. This update resolves     the issue. (BZ#609017)\n\n  - Prior to Python 2.7, programs that used 'ulimit -n' to     enable communication with large numbers of subprocesses     could still monitor only 1024 file descriptors at a     time, which caused an exception :\n\n    ValueError: filedescriptor out of range in select()\n\nThis was due to the subprocess module using the 'select' system call.\nThe module now uses the 'poll' system call, removing this limitation.\n(BZ#609020)\n\n  - Prior to Python 2.5, the tarfile module failed to unpack     tar files if the path was longer than 100 characters.\n    This update backports the tarfile module from Python 2.5     and the issue no longer occurs. (BZ#263401)\n\n  - The email module incorrectly implemented the logic for     obtaining attachment file names: the get_filename()     fallback for using the deprecated 'name' parameter of     the 'Content-Type' header erroneously used the     'Content-Disposition' header. This update backports a     fix from Python 2.6, which resolves this issue.\n    (BZ#644147)\n\n  - Prior to version 2.5, Python's optimized memory     allocator never released memory back to the system. The     memory usage of a long-running Python process would     resemble a 'high-water mark'. This update backports a     fix from Python 2.5a1, which frees unused arenas, and     adds a non-standard sys._debugmallocstats() function,     which prints diagnostic information to stderr. Finally,     when running under Valgrind, the optimized allocator is     deactivated, to allow more convenient debugging of     Python memory usage issues. (BZ#569093)\n\n  - The urllib and urllib2 modules ignored the no_proxy     variable, which could lead to programs such as 'yum'     erroneously accessing a proxy server for URLs covered by     a 'no_proxy' exclusion. This update backports fixes of     urllib and urllib2, which respect the 'no_proxy'     variable, which fixes these issues. (BZ#549372)\n\nAs well, this update adds the following enhancements :\n\n  - This update introduces a new python-libs package,     subsuming the majority of the content of the core python     package. This makes both 32-bit and 64-bit Python     libraries available on PowerPC systems. (BZ#625372)\n\n  - The python-libs.i386 package is now available for 64-bit     Itanium with the 32-bit Itanium compatibility mode.\n    (BZ#644761)",
            "last seen": "2019-02-21",
            "modified": "2018-12-31",
            "plugin id": "60935",
            "published": "2012-08-01",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=60935",
            "title": "Scientific Linux Security Update : python on SL5.x i386/x86_64"
        },
        {
            "NASL family": "Red Hat Local Security Checks",
            "NASL id": "REDHAT-RHSA-2011-0027.NASL",
            "description": "Updated python packages that fix multiple security issues, several bugs, and add two enhancements are now available for Red Hat Enterprise Linux 5.\n\nThe Red Hat Security Response Team has rated this update as having low security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language.\n\nIt was found that many applications embedding the Python interpreter did not specify a valid full path to the script or application when calling the PySys_SetArgv API function, which could result in the addition of the current working directory to the module search path (sys.path). A local attacker able to trick a victim into running such an application in an attacker-controlled directory could use this flaw to execute code with the victim's privileges. This update adds the PySys_SetArgvEx API. Developers can modify their applications to use this new API, which sets sys.argv without modifying sys.path.\n(CVE-2008-5983)\n\nMultiple flaws were found in the Python rgbimg module. If an application written in Python was using the rgbimg module and loaded a specially crafted SGI image file, it could cause the application to crash or, possibly, execute arbitrary code with the privileges of the user running the application. (CVE-2009-4134, CVE-2010-1449, CVE-2010-1450)\n\nMultiple flaws were found in the Python audioop module. Supplying certain inputs could cause the audioop module to crash or, possibly, execute arbitrary code. (CVE-2010-1634, CVE-2010-2089)\n\nThis update also fixes the following bugs :\n\n* When starting a child process from the subprocess module in Python 2.4, the parent process could leak file descriptors if an error occurred. This update resolves the issue. (BZ#609017)\n\n* Prior to Python 2.7, programs that used 'ulimit -n' to enable communication with large numbers of subprocesses could still monitor only 1024 file descriptors at a time, which caused an exception :\n\nValueError: filedescriptor out of range in select()\n\nThis was due to the subprocess module using the 'select' system call.\nThe module now uses the 'poll' system call, removing this limitation.\n(BZ#609020)\n\n* Prior to Python 2.5, the tarfile module failed to unpack tar files if the path was longer than 100 characters. This update backports the tarfile module from Python 2.5 and the issue no longer occurs.\n(BZ#263401)\n\n* The email module incorrectly implemented the logic for obtaining attachment file names: the get_filename() fallback for using the deprecated 'name' parameter of the 'Content-Type' header erroneously used the 'Content-Disposition' header. This update backports a fix from Python 2.6, which resolves this issue. (BZ#644147)\n\n* Prior to version 2.5, Python's optimized memory allocator never released memory back to the system. The memory usage of a long-running Python process would resemble a 'high-water mark'. This update backports a fix from Python 2.5a1, which frees unused arenas, and adds a non-standard sys._debugmallocstats() function, which prints diagnostic information to stderr. Finally, when running under Valgrind, the optimized allocator is deactivated, to allow more convenient debugging of Python memory usage issues. (BZ#569093)\n\n* The urllib and urllib2 modules ignored the no_proxy variable, which could lead to programs such as 'yum' erroneously accessing a proxy server for URLs covered by a 'no_proxy' exclusion. This update backports fixes of urllib and urllib2, which respect the 'no_proxy' variable, which fixes these issues. (BZ#549372)\n\nAs well, this update adds the following enhancements :\n\n* This update introduces a new python-libs package, subsuming the majority of the content of the core python package. This makes both 32-bit and 64-bit Python libraries available on PowerPC systems.\n(BZ#625372)\n\n* The python-libs.i386 package is now available for 64-bit Itanium with the 32-bit Itanium compatibility mode. (BZ#644761)\n\nAll Python users are advised to upgrade to these updated packages, which contain backported patches to correct these issues and add these enhancements.",
            "last seen": "2019-02-21",
            "modified": "2018-11-26",
            "plugin id": "51524",
            "published": "2011-01-14",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=51524",
            "title": "RHEL 5 : python (RHSA-2011:0027)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_PYTHON-7314.NASL",
            "description": "With this update of Python :\n\n  - a race condition in the accept() implementation of     smtpd.py could lead to a denial of service.\n    (CVE-2010-3493)\n\n  - integer overflows and insufficient size checks could     crash the audioop and rgbimg modules. (CVE-2010-2089 /     CVE-2010-1634 / CVE-2009-4134 / CVE-2010-1449 /     CVE-2010-1450)",
            "last seen": "2019-02-21",
            "modified": "2012-05-17",
            "plugin id": "51642",
            "published": "2011-01-21",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=51642",
            "title": "SuSE 10 Security Update : Python (ZYPP Patch Number 7314)"
        }
    ],
    "ranking": [
        [
            {
                "circl": 3
            }
        ]
    ],
    "redhat": {
        "advisories": [
            {
                "bugzilla": {
                    "id": "541698",
                    "title": "CVE-2009-4134 CVE-2010-1449 CVE-2010-1450 python: rgbimg: multiple security issues"
                },
                "oval": {
                    "AND": [
                        {
                            "comment": "Red Hat Enterprise Linux 4 is installed",
                            "oval": "oval:com.redhat.rhsa:tst:20060016001"
                        },
                        {
                            "OR": [
                                {
                                    "AND": [
                                        {
                                            "comment": "python is earlier than 0:2.3.4-14.9.el4",
                                            "oval": "oval:com.redhat.rhsa:tst:20110260002"
                                        },
                                        {
                                            "comment": "python is signed with Red Hat master key",
                                            "oval": "oval:com.redhat.rhsa:tst:20060713003"
                                        }
                                    ]
                                },
                                {
                                    "AND": [
                                        {
                                            "comment": "python-devel is earlier than 0:2.3.4-14.9.el4",
                                            "oval": "oval:com.redhat.rhsa:tst:20110260010"
                                        },
                                        {
                                            "comment": "python-devel is signed with Red Hat master key",
                                            "oval": "oval:com.redhat.rhsa:tst:20060713009"
                                        }
                                    ]
                                },
                                {
                                    "AND": [
                                        {
                                            "comment": "python-docs is earlier than 0:2.3.4-14.9.el4",
                                            "oval": "oval:com.redhat.rhsa:tst:20110260006"
                                        },
                                        {
                                            "comment": "python-docs is signed with Red Hat master key",
                                            "oval": "oval:com.redhat.rhsa:tst:20060713013"
                                        }
                                    ]
                                },
                                {
                                    "AND": [
                                        {
                                            "comment": "python-tools is earlier than 0:2.3.4-14.9.el4",
                                            "oval": "oval:com.redhat.rhsa:tst:20110260008"
                                        },
                                        {
                                            "comment": "python-tools is signed with Red Hat master key",
                                            "oval": "oval:com.redhat.rhsa:tst:20060713007"
                                        }
                                    ]
                                },
                                {
                                    "AND": [
                                        {
                                            "comment": "tkinter is earlier than 0:2.3.4-14.9.el4",
                                            "oval": "oval:com.redhat.rhsa:tst:20110260004"
                                        },
                                        {
                                            "comment": "tkinter is signed with Red Hat master key",
                                            "oval": "oval:com.redhat.rhsa:tst:20060713005"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "rhsa": {
                    "id": "RHSA-2011:0260",
                    "released": "2011-02-16",
                    "severity": "Low",
                    "title": "RHSA-2011:0260: python security and bug fix update (Low)"
                }
            },
            {
                "rhsa": {
                    "id": "RHSA-2011:0027"
                }
            }
        ],
        "rpms": [
            "python-0:2.4.3-43.el5",
            "python-devel-0:2.4.3-43.el5",
            "python-libs-0:2.4.3-43.el5",
            "python-tools-0:2.4.3-43.el5",
            "tkinter-0:2.4.3-43.el5",
            "python-0:2.3.4-14.9.el4",
            "python-devel-0:2.3.4-14.9.el4",
            "python-docs-0:2.3.4-14.9.el4",
            "python-tools-0:2.3.4-14.9.el4",
            "tkinter-0:2.3.4-14.9.el4"
        ]
    },
    "references": [
        "http://bugs.python.org/issue8678",
        "http://lists.apple.com/archives/security-announce/2010//Nov/msg00000.html",
        "http://lists.opensuse.org/opensuse-security-announce/2011-01/msg00006.html",
        "http://support.apple.com/kb/HT4435",
        "http://www.mandriva.com/security/advisories?name=MDVSA-2010:215",
        "http://www.redhat.com/support/errata/RHSA-2011-0027.html",
        "http://www.redhat.com/support/errata/RHSA-2011-0260.html",
        "http://www.securityfocus.com/bid/40365",
        "http://www.vupen.com/english/advisories/2011/0122",
        "http://www.vupen.com/english/advisories/2011/0212",
        "http://www.vupen.com/english/advisories/2011/0413",
        "https://bugzilla.redhat.com/show_bug.cgi?id=541698"
    ],
    "refmap": {
        "apple": [
            "APPLE-SA-2010-11-10-1"
        ],
        "bid": [
            "40365"
        ],
        "confirm": [
            "http://bugs.python.org/issue8678",
            "http://support.apple.com/kb/HT4435",
            "https://bugzilla.redhat.com/show_bug.cgi?id=541698"
        ],
        "mandriva": [
            "MDVSA-2010:215"
        ],
        "secunia": [
            "42888",
            "43068",
            "43364"
        ],
        "suse": [
            "SUSE-SR:2011:002"
        ],
        "vupen": [
            "ADV-2011-0122",
            "ADV-2011-0212",
            "ADV-2011-0413"
        ]
    },
    "summary": "Multiple buffer overflows in the RLE decoder in the rgbimg module in Python 2.5 allow remote attackers to have an unspecified impact via an image file containing crafted data that triggers improper processing within the (1) longimagedata or (2) expandrow function.",
    "vulnerable_configuration": [
        {
            "id": "cpe:2.3:a:python:python:2.5",
            "title": "Python 2.5"
        }
    ],
    "vulnerable_configuration_cpe_2_2": [
        "cpe:/a:python:python:2.5"
    ]
}